{
  "vfor": {
    "prefix": "vfor",
    "body": [
      "${1:div}(v-for=\"${2:item} in ${3:items}\" :key=\"${0:item.id}\")",
      "\t| {{ ${5:item} }}"
    ],
    "description": "v-for statement with HTML element"
  },
  "v-for": {
    "prefix": "v-for",
    "body": ["v-for=\"${1:item} in ${2:items}\" :key=\"${0:item.id}\""],
    "description": "Simple inline v-for statement."
  },
  "v-for-ik": {
    "prefix": "v-for-ik",
    "body": [
      "v-for=\"(${1:item}, index, key) in ${2:items}\" :key=\"${0:key}\""
    ],
    "description": "v-for inline with index and key"
  },
  "vmodel": {
    "prefix": "vmodel",
    "body": ["${1:input}(v-model=\"${0:data}\")"],
    "description": "v-model directive in a block"
  },
  "input": {
    "prefix": "input",
    "body": ["input(v-model=\"${0:data}\")"],
    "description": "v-model directive input"
  },
  "v-model": {
    "prefix": "v-model",
    "body": ["v-model=\"${0:data}\""],
    "description": "v-model inline statement"
  },
  "vprop": {
    "prefix": "vprop",
    "body": ["${1:component}(:${2:propName}=\"${0}\")"],
    "description": "Vue component with a prop"
  },
  "vimg": {
    "prefix": "vimg",
    "body": [
      "img(:src=\"'${1:/path/to/images/}' + ${2:fileName}\" alt=\"${0:altText}\")"
    ],
    "description": "Vue image source binding"
  },
  ":src": {
    "prefix": ":src",
    "body": [
      ":src=\"'${1:/path/to/images/}' + ${2:fileName}\" alt=\"${0:altText}\""
    ],
    "description": "inline source binding"
  },
  ":style": {
    "prefix": ":style",
    "body": [":style=\"{ ${1:backgroundColor}: ${2:myColor} }\")"],
    "description": "Vue style binding"
  },
  ":style-obj": {
    "prefix": ":style-obj",
    "body": [":style=\"[${1:styleObjectA}, ${2:styleObjectB]}\""],
    "description": "Vue style binding with objects in an array"
  },
  ":class": {
    "prefix": ":class",
    "body": [":class=\"{ ${1:className}: ${2:condition} }\""],
    "description": "Vue class binding"
  },
  ":class-t": {
    "prefix": ":class-t",
    "body": [
      ":class=\"${1:condition} ? '${2:true-class}' : '${3:false-class}'\""
    ],
    "description": "Vue class binding with ternary operator"
  },
  "transition": {
    "prefix": "transition",
    "body": ["transition(name='${1:fade}' mode='${2:out-in}')"],
    "description": "Vue transition wrapper"
  },
  "router-link": {
    "prefix": "router-link",
    "body": ["router-link(to=\"/${1:page}\") ${2:My Page}"],
    "description": "Vue router link"
  },
  "nuxt-link": {
    "prefix": "nuxt-link",
    "body": ["nuxt-link(to=\"/${1:page}\") ${2:My Page}"],
    "description": "Nuxt link"
  }
}
